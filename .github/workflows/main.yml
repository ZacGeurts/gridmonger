name: Build release

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  build-manual:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nim
        uses: iffy/install-nim@v5
        with:
          version: binary:2.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GNU sed
        run: |
          brew install gnu-sed

      - name: Install Sass
        run: |
          npm install -g sass
          sass --version

      - name: Install Sphinx
        run: |
          pip install sphinx
          sphinx-build --version

      - name: Inject version string
        run: |
          set -x
          VERSION=$(./scripts/get-version.sh version-and-hash)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build manual
        env:
          SED: gsed
        run: |
          nim manual

  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        nimversion:
          - binary:2.0.8
        os:
          # - ubuntu-20.04
          - windows-2019
          - macOS-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nim
        uses: iffy/install-nim@v5
        with:
          version: ${{ matrix.nimversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nim dependencies
        run: nimble -y install koi osdialog riff semver winim with

      - name: Inject version string
        run: |
          set -x
          VERSION=$(./scripts/get-version.sh version-and-hash)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: macOS arm64 release build
        run: nim -f releaseMacX64

      - name: macOS x86-64 release build
        run: nim -f releaseMacArm64

      - name: Create macOS universal binary
        run: nim mergeMacUniversal

      - name: Create macOS app bundle
        run: nim packageMac

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: gridmonger-v${{ env.VERSION }}-macos
          path: dist/macos/gridmonger-v${{ env.VERSION }}-macos.zip
